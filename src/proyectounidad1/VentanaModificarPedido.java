/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package proyectounidad1;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author diurno
 */
public class VentanaModificarPedido extends javax.swing.JDialog {

    /**
     * Creates new form VentanaModificarPedido
     */
    
    
    private int codigoPedidoM;
    private VentanaPrincipal principal;
    private String nombreCompania = "";
    
    
    public VentanaModificarPedido(java.awt.Frame parent, boolean modal, VentanaPrincipal principal) {
        super(parent, modal);
        initComponents();
        this.principal = principal;
        principal.rellenarListasVentanasAnadirModificar(comboCiudades, listaPaises, listaEmpleados);
        
        //Cuando le des click al jTextField de clientes, se abrirá una nueva ventana para elegir un cliente
        clienteTxt.setEditable(false); // Hacerlo no editable
        clienteTxt.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getButton() == MouseEvent.BUTTON1) { // Verificar clic izquierdo
                    VentanaElegirCliente vc = new VentanaElegirCliente(principal, true, principal.con);
                    vc.setVisible(true);
                    nombreCompania =  vc.nombreCompania();
                    clienteTxt.setText(nombreCompania);
                }
            }
        });
        
        //Convertir el formato del jTextField de fechas en YYYY-MM-DD
        ((AbstractDocument) fpedidoTxt.getDocument()).setDocumentFilter(new DateDocumentFilter());
        ((AbstractDocument) fenvioTxt.getDocument()).setDocumentFilter(new DateDocumentFilter());
        ((AbstractDocument) fentregaTxt.getDocument()).setDocumentFilter(new DateDocumentFilter());
    }
    
    
     public VentanaModificarPedido(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private int obtenerCodeEmpleadoDesdeNombre(String nombreEmpleado) {
        int codeEmpleado = 0; // Valor predeterminado en caso de no encontrar coincidencia

        // Suponiendo que tienes una conexión a la base de datos llamada 'con'
        try (PreparedStatement preparedStatement = principal.con.prepareStatement("SELECT CODIGO FROM EMPLEADOS WHERE NOMBRE = ?")) {
            preparedStatement.setString(1, nombreEmpleado);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    codeEmpleado = resultSet.getInt("CODIGO");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return codeEmpleado;
    }

    private int obtenerCodCiudadDesdeNombre(String nombreCiudad) {
        int codCiudad = 0; // Valor predeterminado en caso de no encontrar coincidencia

        // Suponiendo que tienes una conexión a la base de datos llamada 'con'
        try (PreparedStatement preparedStatement = principal.con.prepareStatement("SELECT CODIGO FROM CIUDADES WHERE NOMBRE = ?")) {
            preparedStatement.setString(1, nombreCiudad);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    codCiudad = resultSet.getInt("CODIGO");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return codCiudad;
    }
    
    private int obtenerCodClienteDesdeNombre(String nombreCompania) {
        int codCiudad = 0; // Valor predeterminado en caso de no encontrar ningun valor que coincida

        //Conseguir el codigo cliente mediante el nombre de la compania
        try (PreparedStatement preparedStatement = principal.con.prepareStatement("SELECT CODIGO FROM CLIENTES WHERE NOMCOMPANIA = ?")) {
            preparedStatement.setString(1, nombreCompania);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    codCiudad = resultSet.getInt("CODIGO");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return codCiudad;
    }
    
    
    
    
    public void rellenarDatos(int codigoPedido ){
        codigoPedidoM = codigoPedido;
        
        // Consulta SQL para obtener información del pedido y sus relaciones
        String query = "SELECT P.CODCLIENTE, C.NOMCOMPANIA AS NOMBRE_CLIENTE, C.NOMCONTACTO AS NOMBRE_CONTACTO, "
                    + "E.NOMBRE AS NOMBRE_EMPLEADO, E.CODIGO AS CODEMPLEADO, P.FECHAPEDIDO, P.FECHAENTREGA, P.FECHAENVIO, P.CARGO, P.DIRECCION, "
                    + "CI.NOMBRE AS NOMBRE_CIUDAD, CI.CODPAIS AS CODIGOPAIS, P.CODPOSTAL, CE.NOMBRE AS NOMBRE_EMPRESA_ENVIO " +
                    "FROM PUBLIC.PEDIDOS P " +
                    "JOIN PUBLIC.CLIENTES C ON P.CODCLIENTE = C.CODIGO " +
                    "JOIN PUBLIC.EMPLEADOS E ON P.CODEMPLEADO = E.CODIGO " +
                    "JOIN PUBLIC.CIUDADES CI ON P.CODCIUDAD = CI.CODIGO " +
                    "LEFT JOIN PUBLIC.COMPENVIOS CE ON P.CODEMPREENVIO = CE.CODIGO " +
                    "WHERE P.CODIGO = ? ";
        try{
            PreparedStatement pstmt = principal.con.prepareStatement(query);
            pstmt.setInt(1,codigoPedido);
            
            // Ejecutar la consulta y obtener el conjunto de resultados
            ResultSet rs = pstmt.executeQuery();
            
            if(rs.next()){
                // Asignar valores a los campos
                double cargo = rs.getDouble("CARGO");
                DecimalFormat decimalFormat = new DecimalFormat("#.##");
                String cargoFormateado = decimalFormat.format(cargo);
                
                clienteTxt.setText(rs.getString("NOMBRE_CLIENTE"));
                cargoTxt.setText(cargoFormateado);
                direccionTxtA.setText(rs.getString("DIRECCION"));
                fpedidoTxt.setText(rs.getString("FECHAPEDIDO"));
                fentregaTxt.setText(rs.getString("FECHAENTREGA"));
                fenvioTxt.setText(rs.getString("FECHAENVIO"));
                codPostalTxt.setText(rs.getString("CODPOSTAL"));

                // Obtener el nombre del empleado a través de una segunda consulta
                String queryEmpleado = "SELECT nombre FROM empleados WHERE codigo = ?";
                PreparedStatement pstmt2 = principal.con.prepareStatement(queryEmpleado);
                pstmt2.setInt(1,rs.getInt("CODEMPLEADO"));
                ResultSet rs2 = pstmt2.executeQuery();
                 // Seleccionar el empleado en la lista
                    if(rs2.next()){
                        listaEmpleados.setSelectedValue(rs2.getString("nombre"), rootPaneCheckingEnabled);
                    }
                
                // Obtener el nombre del PAIS a través de una segunda consulta
                String queryPais = "SELECT nombre FROM paises WHERE codigo = ?";
                PreparedStatement pstmt3 = principal.con.prepareStatement(queryPais);
                pstmt3.setInt(1,rs.getInt("CODIGOPAIS"));
                ResultSet rs3 = pstmt3.executeQuery();
                 // Seleccionar el PAIS en la lista
                    if(rs3.next()){
                        String nombrepais = rs3.getString("nombre");
                         listaPaises.setSelectedValue(nombrepais, rootPaneCheckingEnabled);
                         principal.cargarCiudadesPorPais(nombrepais, comboCiudades);
                    }
                    
                comboCiudades.setSelectedItem(rs.getString("NOMBRE_CIUDAD"));

            }
        }
        catch(SQLException e){
             e.printStackTrace();
             System.out.println("Error: " + e.getMessage());
        }
    }
    
     


    
    private void modificarDatosEnBaseDeDatos() {
        
        // Consulta SQL para actualizar los datos de un pedido en la base de datos
        String updateQuery = "UPDATE PUBLIC.PEDIDOS SET "
                            + "CODCLIENTE = ?, "
                            + "CODEMPLEADO = ?, "
                            + "FECHAPEDIDO = ?, "
                            + "FECHAENTREGA = ?, "
                            + "FECHAENVIO = ?, "
                            + "CARGO = ?, "
                            + "DIRECCION = ?, "
                            + "CODCIUDAD = ?, "
                            + "CODPOSTAL = ? "
                            + "WHERE CODIGO = ?";
        
        
        try {
            PreparedStatement pstmt = principal.con.prepareStatement(updateQuery);
            
            String nombreEmpleado = listaEmpleados.getSelectedValue();
            int codeEmpleado = obtenerCodeEmpleadoDesdeNombre(nombreEmpleado);
            String codeEmpleadoString = String.valueOf(codeEmpleado);
            String nombreCiudad = comboCiudades.getSelectedItem().toString();
            String cargoTextValue = cargoTxt.getText().trim(); // Eliminar espacios en blanco al principio y al final
            
            //Compropbar que esten rellenados todos los campos
            if(codeEmpleadoString.equals("")||
                nombreCiudad.equals("Este país no tiene ciudades") ||
                nombreCiudad.equals("Selecciona un país") ||
                nombreEmpleado == null ||
                nombreCiudad.equals("")
                ||cargoTextValue.equals("")
                || clienteTxt.getText().equals("")
                || codPostalTxt.getText().equals("")
                || direccionTxtA.getText().equals("")
                || fpedidoTxt.getText().equals("")
                || fentregaTxt.getText().equals("")
                || fentregaTxt.getText().equals(""))
            {
                 JOptionPane.showMessageDialog(null, "Rellena todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                //Comprobar si el cargo es un número para evitar errores
                if(esNumero(cargoTextValue)){
                // Obtener códigos necesarios para la actualización
                int codigoEmpleado = obtenerCodeEmpleadoDesdeNombre(listaEmpleados.getSelectedValue());
                int codigoCiudad = obtenerCodCiudadDesdeNombre(comboCiudades.getSelectedItem().toString());
                int codigoCliente = obtenerCodClienteDesdeNombre(clienteTxt.getText());

                 // Convertir las fechas de texto a objetos Date de sql
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
                java.util.Date fechaPedidoUtil = dateFormat.parse(fpedidoTxt.getText());
                java.util.Date fechaEntregaUtil = dateFormat.parse(fentregaTxt.getText());
                java.util.Date fechaEnvioUtil = dateFormat.parse(fenvioTxt.getText());
                Date fechaPedidoSql = new Date(fechaPedidoUtil.getTime());
                Date fechaEntregaSql = new Date(fechaEntregaUtil.getTime());
                Date fechaEnvioSql = new Date(fechaEnvioUtil.getTime());

                // Establecer los valores para los parámetros en la consulta UPDATE
                pstmt.setInt(1, codigoCliente);
                pstmt.setInt(2, codigoEmpleado);
                pstmt.setDate(3, fechaPedidoSql);
                pstmt.setDate(4, fechaEntregaSql);
                pstmt.setDate(5, fechaEnvioSql);
                pstmt.setString(6, cargoTxt.getText());
                pstmt.setString(7, direccionTxtA.getText());
                pstmt.setInt(8, codigoCiudad);
                pstmt.setString(9, codPostalTxt.getText());

                // El último parámetro en la cláusula WHERE
                pstmt.setInt(10, codigoPedidoM);

                // Ejecutar la consulta UPDATE y obtener el número de filas afectadas
                int rowsAffected = pstmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Modificación realizada con exito", "Modificación", JOptionPane.INFORMATION_MESSAGE);
                    principal.cargarTablaBuscar();
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "No se ha actualizado el pedido", "Modificación", JOptionPane.INFORMATION_MESSAGE);
                }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Por favor, ingrese solo números en Cargo", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
             

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Escribe en fecha todos los campos, año, mes y día", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public boolean esNumero(String texto) {
        try {
            Integer.parseInt(texto);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelFormulario = new javax.swing.JPanel();
        codPostalLabel = new javax.swing.JLabel();
        codPostalTxt = new javax.swing.JTextField();
        cargoLabel = new javax.swing.JLabel();
        cargoTxt = new javax.swing.JTextField();
        fpedidoLabel = new javax.swing.JLabel();
        fenvioLabel = new javax.swing.JLabel();
        fpedidoTxt = new javax.swing.JTextField();
        fenvioTxt = new javax.swing.JTextField();
        direccionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        direccionTxtA = new javax.swing.JTextArea();
        fentregaLabel = new javax.swing.JLabel();
        fentregaTxt = new javax.swing.JTextField();
        clienteLabel = new javax.swing.JLabel();
        clienteTxt = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaEmpleados = new javax.swing.JList<>();
        empleadoLabel = new javax.swing.JLabel();
        panelBotones = new javax.swing.JPanel();
        botonModificar = new javax.swing.JButton();
        botonReiniciar = new javax.swing.JButton();
        panelFormulario2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        comboCiudades = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaPaises = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 400));

        codPostalLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        codPostalLabel.setText("Código postal");

        cargoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cargoLabel.setText("Cargo (total€)");

        fpedidoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fpedidoLabel.setText("Fecha pedido");

        fenvioLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fenvioLabel.setText("Fecha envio");

        direccionLabel.setText("Dirección");

        direccionTxtA.setColumns(20);
        direccionTxtA.setRows(5);
        jScrollPane1.setViewportView(direccionTxtA);

        fentregaLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fentregaLabel.setText("Fecha entrega");

        clienteLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        clienteLabel.setText("Cliente");

        clienteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clienteTxtActionPerformed(evt);
            }
        });

        listaEmpleados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(listaEmpleados);

        empleadoLabel.setText("Empleado");

        botonModificar.setText("Modificar pedido");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonReiniciar.setText("Cancelar");
        botonReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(botonReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelFormularioLayout = new javax.swing.GroupLayout(panelFormulario);
        panelFormulario.setLayout(panelFormularioLayout);
        panelFormularioLayout.setHorizontalGroup(
            panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelFormularioLayout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addComponent(direccionLabel))
                        .addComponent(codPostalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(clienteLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(clienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelFormularioLayout.createSequentialGroup()
                        .addComponent(fpedidoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fpedidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFormularioLayout.createSequentialGroup()
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fentregaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fenvioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empleadoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fentregaTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(fenvioTxt))))
                .addGap(94, 94, 94))
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelFormularioLayout.setVerticalGroup(
            panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormularioLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(direccionLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelFormularioLayout.createSequentialGroup()
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fpedidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fpedidoLabel))
                        .addGap(25, 25, 25)
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fenvioLabel)
                            .addComponent(fenvioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fentregaLabel)
                            .addComponent(fentregaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFormularioLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cargoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cargoLabel))
                                .addGap(30, 30, 30)
                                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(codPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(codPostalLabel))
                                .addGap(35, 35, 35)
                                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(clienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clienteLabel)))
                            .addGroup(panelFormularioLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(empleadoLabel)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setText("Ciudad");

        comboCiudades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        listaPaises.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(listaPaises);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("País");

        javax.swing.GroupLayout panelFormulario2Layout = new javax.swing.GroupLayout(panelFormulario2);
        panelFormulario2.setLayout(panelFormulario2Layout);
        panelFormulario2Layout.setHorizontalGroup(
            panelFormulario2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormulario2Layout.createSequentialGroup()
                .addGroup(panelFormulario2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFormulario2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFormulario2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        panelFormulario2Layout.setVerticalGroup(
            panelFormulario2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormulario2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelFormulario2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(panelFormulario2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFormulario2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelFormulario2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clienteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clienteTxtActionPerformed

    }//GEN-LAST:event_clienteTxtActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        
        modificarDatosEnBaseDeDatos();
    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReiniciarActionPerformed
        dispose();
    }//GEN-LAST:event_botonReiniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaModificarPedido dialog = new VentanaModificarPedido(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonReiniciar;
    private javax.swing.JLabel cargoLabel;
    private javax.swing.JTextField cargoTxt;
    private javax.swing.JLabel clienteLabel;
    private javax.swing.JTextField clienteTxt;
    private javax.swing.JLabel codPostalLabel;
    private javax.swing.JTextField codPostalTxt;
    private javax.swing.JComboBox<String> comboCiudades;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JTextArea direccionTxtA;
    private javax.swing.JLabel empleadoLabel;
    private javax.swing.JLabel fentregaLabel;
    private javax.swing.JTextField fentregaTxt;
    private javax.swing.JLabel fenvioLabel;
    private javax.swing.JTextField fenvioTxt;
    private javax.swing.JLabel fpedidoLabel;
    private javax.swing.JTextField fpedidoTxt;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> listaEmpleados;
    private javax.swing.JList<String> listaPaises;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelFormulario;
    private javax.swing.JPanel panelFormulario2;
    // End of variables declaration//GEN-END:variables
}
