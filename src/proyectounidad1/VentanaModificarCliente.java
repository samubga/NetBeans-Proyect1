/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package proyectounidad1;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.text.AbstractDocument;

/**
 *
 * @author diurno
 */
public class VentanaModificarCliente extends javax.swing.JDialog {

    /**
     * Creates new form VentanaModificar
     */
    
    private String cargo;
    private String ciudad;
    private int codigoClienteM;
    private VentanaPrincipal principal;
    
    
    public VentanaModificarCliente(java.awt.Frame parent, boolean modal, VentanaPrincipal principal) {
        super(parent, modal);
        initComponents();
        this.principal = principal;
        principal.rellenarSeleccionesBuscarCliente(comboPaises, listaCiudades);
        String consultaCargos = "SELECT NOMBRE FROM PUBLIC.CARGOS";
        try (PreparedStatement statement = principal.con.prepareStatement(consultaCargos);
             ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                String nombreCargo = resultSet.getString("NOMBRE");

                // Crear un JRadioButton para cada cargo
                JRadioButton radioButton = new JRadioButton(nombreCargo);

                // Agregar el JRadioButton al buttonGroup1
                String seleccion = resultSet.getString("NOMBRE");
                if(seleccion == null){
                    seleccion = "";
                }else{
                    radioButton.setActionCommand(seleccion);
                }
                
                buttonGroup1.add(radioButton);
                

                // Agregar el JRadioButton al panelBotones
                panelCargos.add(radioButton);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        ((AbstractDocument) telefTxt.getDocument()).setDocumentFilter(new NumeroTelefonoDocumentFilter());
        
    }
    
    
     public VentanaModificarCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    

    private int obtenerCodCiudadDesdeNombre(String nombreCiudad) {
        int codCiudad = 0; // Valor predeterminado en caso de no encontrar coincidencia

        try (PreparedStatement preparedStatement = principal.con.prepareStatement("SELECT CODIGO FROM CIUDADES WHERE NOMBRE = ?")) {
            preparedStatement.setString(1, nombreCiudad);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    codCiudad = resultSet.getInt("CODIGO");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return codCiudad;
    }
    
    private int obtenerCodCargoDesdeNombre(String nombreCargo) {
        int codCargo = 0; // Valor predeterminado en caso de no encontrar coincidencia

        try (PreparedStatement preparedStatement = principal.con.prepareStatement("SELECT CODIGO FROM CARGOS WHERE NOMBRE = ?")) {
            preparedStatement.setString(1, nombreCargo);

            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                if (resultSet.next()) {
                    codCargo = resultSet.getInt("CODIGO");
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        return codCargo;
    }
    
  
    
    
    
    
    public void rellenarDatos(int codigoCliente ){
        codigoClienteM = codigoCliente;
        
        // Consulta SQL para obtener información del cliente y sus relaciones
         String query = "SELECT C.NOMCOMPANIA AS NombreCompaniaCliente, C.NOMCONTACTO AS NombreContacto, C.DIRECCION AS Direccion,"
                    + " C.CODIGOPOSTAL AS CodigoPostal, C.TELEFONO AS Telefono, G.NOMBRE AS Cargo, CI.NOMBRE AS Ciudad, CI.CODPAIS AS Pais FROM PUBLIC.CLIENTES C "
                    + "LEFT JOIN PUBLIC.CARGOS G ON C.CODCARGO = G.CODIGO LEFT JOIN PUBLIC.CIUDADES CI ON C.CODCIUDAD = CI.CODIGO"
                    + " WHERE C.CODIGO = ?";
        try{
            PreparedStatement pstmt = principal.con.prepareStatement(query);
            pstmt.setInt(1,codigoCliente);
            
            // Ejecutar la consulta y obtener el conjunto de resultados
            ResultSet rs = pstmt.executeQuery();
            
            if(rs.next()){
                // Asignar valores a los campos
                companiaTxt.setText(rs.getString("NombreCompaniaCliente"));
                contactTxt.setText(rs.getString("NombreContacto"));
                direccionTxtA.setText(rs.getString("Direccion"));
                codPostalTxt.setText(rs.getString("CodigoPostal"));
                telefTxt.setText(rs.getString("Telefono"));
                comboPaises.setSelectedIndex(rs.getInt("Pais"));
                listaCiudades.setSelectedValue(rs.getString("ciudad"), rootPaneCheckingEnabled);
                ciudad = rs.getString("ciudad");
                // Obtener el nombre del cargo del cliente
                cargo = rs.getString("Cargo");
                // Iterar sobre los botones del ButtonGroup
                Enumeration<AbstractButton> buttons = buttonGroup1.getElements();
                while (buttons.hasMoreElements()) {
                    AbstractButton button = buttons.nextElement();
                    if (button.getActionCommand().equals(cargo)) {
                        // Seleccionar el botón que coincide con el cargo del cliente
                        button.setSelected(true);
                    }
                }
                
            }
            
        }
        catch(SQLException e){
             e.printStackTrace();
             System.out.println("Error: " + e.getMessage());
        }
    }
    
     


    
    private void modificarDatosEnBaseDeDatos() {
        // Consulta SQL para actualizar los datos de un cliente en la base de datos
        String updateQuery = "UPDATE PUBLIC.CLIENTES SET "
                            + "NOMCOMPANIA = ?, "
                            + "NOMCONTACTO = ?, "
                            + "CODCARGO = ?, "
                            + "DIRECCION = ?, "
                            + "CODCIUDAD = ?, "
                            + "CODIGOPOSTAL = ?, "
                            + "TELEFONO = ? "
                            + "WHERE CODIGO = ?"; 

        try {
            PreparedStatement pstmt = principal.con.prepareStatement(updateQuery);
            ciudad =  listaCiudades.getSelectedValue();
            ButtonModel selectedModel = buttonGroup1.getSelection();
            cargo = selectedModel.getActionCommand();
            int codigoCiudad = obtenerCodCiudadDesdeNombre(ciudad);
            int codigoCargo = obtenerCodCargoDesdeNombre(cargo);
            
            // Establecer los valores para los parámetros en la consulta UPDATE
            pstmt.setString(1, companiaTxt.getText());
            pstmt.setString(2, contactTxt.getText());
            pstmt.setInt(3, codigoCargo);
            pstmt.setString(4, direccionTxtA.getText());
            pstmt.setInt(5, codigoCiudad);
            pstmt.setString(6, codPostalTxt.getText());
            pstmt.setString(7, telefTxt.getText());
            pstmt.setInt(8, codigoClienteM);

            // Ejecutar la consulta UPDATE y obtener el número de filas afectadas
            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Modificación realizada con exito", "Modificación", JOptionPane.INFORMATION_MESSAGE);
               
                dispose();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha actualizado el cliente", "Modificación", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Error al intentar actualizar el pedido: " + e.getMessage());
        }
    }
    
    
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelFormulario = new javax.swing.JPanel();
        companiaLabel = new javax.swing.JLabel();
        companiaTxt = new javax.swing.JTextField();
        codPostalLabel = new javax.swing.JLabel();
        contactLabel = new javax.swing.JLabel();
        contactTxt = new javax.swing.JTextField();
        codPostalTxt = new javax.swing.JTextField();
        paisLabel = new javax.swing.JLabel();
        comboPaises = new javax.swing.JComboBox<>();
        ciudadLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaCiudades = new javax.swing.JList<>();
        telefLabel = new javax.swing.JLabel();
        telefTxt = new javax.swing.JTextField();
        direccionLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        direccionTxtA = new javax.swing.JTextArea();
        panelCargos = new javax.swing.JPanel();
        panelBotones = new javax.swing.JPanel();
        modificarBoton = new javax.swing.JButton();
        cancelarBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelFormulario.setPreferredSize(new java.awt.Dimension(1080, 220));

        companiaLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        companiaLabel.setText("Compañía");

        codPostalLabel.setText("Código postal");

        contactLabel.setText("Contacto");

        codPostalTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codPostalTxtActionPerformed(evt);
            }
        });

        paisLabel.setText("País");

        comboPaises.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ciudadLabel.setText("Ciudad");

        listaCiudades.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaCiudades);

        telefLabel.setText("Teléfono");

        direccionLabel.setText("Dirección");

        direccionTxtA.setColumns(20);
        direccionTxtA.setRows(5);
        jScrollPane2.setViewportView(direccionTxtA);

        javax.swing.GroupLayout panelFormularioLayout = new javax.swing.GroupLayout(panelFormulario);
        panelFormulario.setLayout(panelFormularioLayout);
        panelFormularioLayout.setHorizontalGroup(
            panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormularioLayout.createSequentialGroup()
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelFormularioLayout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(direccionLabel)
                                .addComponent(telefLabel)
                                .addComponent(companiaLabel)
                                .addComponent(contactLabel)
                                .addComponent(codPostalLabel)))
                        .addComponent(paisLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(ciudadLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(contactTxt)
                    .addGroup(panelFormularioLayout.createSequentialGroup()
                        .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboPaises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(companiaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(codPostalTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                .addComponent(telefTxt, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(61, 61, 61))
        );
        panelFormularioLayout.setVerticalGroup(
            panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFormularioLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(companiaLabel)
                    .addComponent(companiaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactLabel))
                .addGap(18, 18, 18)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codPostalLabel)
                    .addComponent(codPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefLabel))
                .addGap(18, 18, 18)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFormularioLayout.createSequentialGroup()
                        .addComponent(direccionLabel)
                        .addGap(80, 80, 80))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPaises, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paisLabel))
                .addGap(29, 29, 29)
                .addGroup(panelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ciudadLabel))
                .addGap(18, 18, 18))
        );

        panelCargos.setBorder(javax.swing.BorderFactory.createTitledBorder("Cargo"));
        panelCargos.setLayout(new java.awt.GridLayout(8, 2));

        modificarBoton.setText("Modificar");
        modificarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBotonActionPerformed(evt);
            }
        });

        cancelarBoton.setText("Cancelar");
        cancelarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(modificarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(cancelarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelCargos, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCargos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void codPostalTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codPostalTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codPostalTxtActionPerformed

    private void modificarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBotonActionPerformed
        modificarDatosEnBaseDeDatos();
        principal.quitarListener();
        principal.cargarTablaBuscarClientes();
        dispose();
    }//GEN-LAST:event_modificarBotonActionPerformed

    private void cancelarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBotonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelarBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaModificarCliente dialog = new VentanaModificarCliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelarBoton;
    private javax.swing.JLabel ciudadLabel;
    private javax.swing.JLabel codPostalLabel;
    private javax.swing.JTextField codPostalTxt;
    private javax.swing.JComboBox<String> comboPaises;
    private javax.swing.JLabel companiaLabel;
    private javax.swing.JTextField companiaTxt;
    private javax.swing.JLabel contactLabel;
    private javax.swing.JTextField contactTxt;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JTextArea direccionTxtA;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaCiudades;
    private javax.swing.JButton modificarBoton;
    private javax.swing.JLabel paisLabel;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelCargos;
    private javax.swing.JPanel panelFormulario;
    private javax.swing.JLabel telefLabel;
    private javax.swing.JTextField telefTxt;
    // End of variables declaration//GEN-END:variables
}
